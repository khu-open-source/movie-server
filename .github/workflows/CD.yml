name: CD

on:
  push:
    branches: [main]

jobs:
  job_docker:
    name: Build and Run Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set env
        run: echo "${{ secrets.PROJECT_ENV }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/movie-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  job_continuous_deployment:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: [job_docker]

    steps:
      - name: Deploy with SSH
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            docker stop movie-server
            docker rm movie-server
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/movie-server
            docker run -d --name movie-server -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/movie-server
            docker rmi -f $(docker images -f "dangling=true" -q)
